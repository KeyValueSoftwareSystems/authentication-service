type User {
  id: ID!
  email: String
  phone: String
  firstName: String!
  middleName: String
  lastName: String!
  status: String!
  groups: [Group]
  permissions: [Permission]
}

enum OperationType {
  OR
  AND
}


input UpdateUserInput {
  firstName: String
  middleName: String
  lastName: String
}

input UpdateUserPermissionInput {
  permissions: [ID!]!
}

input UpdateUserGroupInput {
  groups: [ID!]!
}

type UserGroupResponse {
  id: ID!,
  name: String!
}

type UserPermissions {
  id: ID!,
  name: String!
}

enum OperationType {
  AND
  OR
}

input UserPermissionsVerification {
permissions: [String]!,
operation: OperationType
}

type Query {
  getUsers: [User]!
  getUser(id: ID!): User
  getUserGroups(id: ID!): [UserGroupResponse]
  getUserPermissions(id: ID!): [UserPermissions]
  verifyUserPermission(params: UserPermissionsVerification!): Boolean
}

type Mutation {
  updateUser(id: ID!, input: UpdateUserInput!): User
  deleteUser(id: ID!): User
  updateUserPermissions(id: ID!, input: UpdateUserPermissionInput!): [UserPermissions]
  updateUserGroups(id: ID!, input: UpdateUserGroupInput!): [UserGroupResponse]
}
