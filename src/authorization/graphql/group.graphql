type Group {
  id: ID!
  name: String!
}

input NewGroupInput {
  name: String!
}

input UpdateGroupInput {
  name: String!
}

input UpdateGroupPermissionInput {
  permissions: [ID!]!
}

input UpdateGroupRoleInput {
  roles: [ID!]!
}

type GroupPermission {
  id: ID!,
  name: String!
}

type GroupRole {
  id: ID!,
  name: String!
}

input FilterGroupInput {
  searchTerm: String
}


type Query {
  getGroups(input: FilterGroupInput): [Group]!
  getGroup(id: ID!): Group
  getGroupPermissions(id: ID!): [GroupPermission]
  getGroupRoles(id: ID!): [GroupRole]
}

type Mutation {
  createGroup(input: NewGroupInput!): Group
  updateGroup(id: ID!, input: UpdateGroupInput!): Group
  deleteGroup(id: ID!): Group
  updateGroupPermissions(id: ID!, input: UpdateGroupPermissionInput!): [GroupPermission]
  updateGroupRoles(id: ID!, input: UpdateGroupRoleInput!): [GroupRole]
}
