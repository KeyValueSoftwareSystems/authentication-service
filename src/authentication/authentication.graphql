type Mutation {
    passwordLogin(input: UserPasswordLoginInput!): TokenResponse
    passwordSignup(input: UserPasswordSignupInput!): UserSignupResponse
    inviteTokenSignup(input: UserInviteTokenSignupInput): InviteTokenResponse
    setPasswordForInvite(input: UserPasswordForInviteInput): UserSignupResponse
    revokeToken(id: ID!): String
    otpLogin(input: UserOTPLoginInput!): TokenResponse
    otpSignup(input: UserOTPSignupInput!): UserSignupResponse
    changePassword(input: UserPasswordInput!): User
    refresh(input: RefreshTokenInput!): TokenResponse
    logout: String
    generateOtp(input: GenerateOtpInput): String
}

input UserPasswordSignupInput {
  email: String
  phone: String
  password: String!
  firstName: String!
  middleName: String
  lastName: String!
}

input UserOTPSignupInput {
  email: String
  phone: String!
  firstName: String!
  middleName: String
  lastName: String!
}

input UserPasswordLoginInput {
  username: String!
  password: String!
}

input UserOTPLoginInput {
  username: String!
  otp: String!
}

type TokenResponse {
  refreshToken: String!
  accessToken: String!
  user: User!
}

type UserSignupResponse {
  id: String!
  email: String
  phone: String
  firstName: String!
  middleName: String
  lastName: String!
}

input UserPasswordInput {
  currentPassword: String!
  newPassword: String!
}

input RefreshTokenInput {
  refreshToken: String!
}

input GenerateOtpInput {
    phone: String!
}

input Enable2FAInput{
    code: String!
}

input UserInviteTokenSignupInput {
  email: String
  phone: String
  firstName: String!
  middleName: String
  lastName: String!
}

type InviteTokenResponse {
  inviteToken: String!
}

input UserPasswordForInviteInput {
  inviteToken: String!
  password: String!
}
